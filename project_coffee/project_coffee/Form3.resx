<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>